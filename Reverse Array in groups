/*
Given an array arr[] of positive integers of size N. Reverse every sub-array of K group elements.

Input:
The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two
lines of input. The first line of each test case consists of an integer N(size of array) and an integer K separated by a space. The second line
of each test case contains N space separated integers denoting the array elements.

Output:
For each test case, print the modified array.

Constraints:
1 ≤ T ≤ 200
1 ≤ N, K ≤ 107
1 ≤ A[i] ≤ 1018

Example:
Input
1
5 3
1 2 3 4 5

Output
3 2 1 5 4

Explanation:
Testcase 1: Reversing groups in size 3, first group consists of elements 1, 2, 3. Reversing this group, we have elements in order as 3, 2, 1.*/

//program
#include <bits/stdc++.h>
using namespace std;

void swap(int *a, int *b)
{
    int *t=a;
    *a=*b;
    *b=*t;
}

void reverse(int arr[], int n, int k) 
{ 
    for (int i = 0; i < n; i += k) 
    { 
        int left = i; 
        int right = min(i + k - 1, n - 1); 
        while (left < right) 
            swap(arr[left++], arr[right--]); 
  
    } 
}

int main() {
	int t; cin>>t; while(t--)
	{
	    int n,k; cin>>n>>k;
	    int a[n],i; for(i=0;i<n;i++) cin>>a[i];
	    reverse(a,n,k);
	    for(i=0;i<n;i++) cout<<a[i]<<" ";
	    cout<<endl;
	}
	return 0;
}
