/*
Arya has a string, S, of uppercase English letters. She writes down the string S on a paper K times.
She wants to calculate the occurence of a specific letter in the first N characters of the final string.

Input:

First line of input contains a single integer T denoting the number of test cases.
The first line of each test case contains a string S.
The second line contains 2 space-separated integers K and N, and an uppercase English letter C whose occurence needs to be counted.

Output:

For each test case, print the required answer in a new line.


Constraints:

1 <= T <= 150
1 <= |S| <= 500
1 <= K <= 10^5
1 <= N <= |S|*K


Example:

Input : 
2
ABA
3 7 B
BHD
4 6 E
Output : 
2
0

Explaination : 
Case 1 : Final string - ABAABAABA
Case 2 : Final string - BHDBHDBHDBHD

Example 2 :
Input : 
1
MMM
2 4 M
Output :
4

Explaination : 
Case 1 : Final string - MMMMMM
*/

#include <iostream>
using namespace std;

long long occ(string s, int n, char c)
{
    int count=0;
    for(int i=0; i<n; i++)
    {
        if(s[i]==c) count++;
    }
return count;
}

int main() {
	int t; cin>>t; while(t--)
	{
	    string s; cin>>s;
	    long long r,f; cin>>r>>f;
	    char p; cin>>p;
	    long long n=s.size();
	    if(f%n == 0)
	     {
	         cout<<occ(s,n,p)*(f/n)<<endl;
	     }
	    else
	    {
	        long long q=f/n;
	        long long sum=q*occ(s,n,p);
	        long long q1=f%n;
	        sum= sum + occ(s,q1,p);
	        cout<<sum<<endl;
	    }
	    
	}
	return 0;
}
