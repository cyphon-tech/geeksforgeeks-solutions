/*
Delete a node from given position in a doubly linked list.

Input:

In this problem, method takes two argument: the address of the head of the linked list and the node you have to delete . The function should
not read any input from stdin/console.
The Node structure has a data part which stores the data and a next pointer which points to the next element of the linked list. 
There are multiple test cases. For each test case, this method will be called individually.

Output:

Delete the node from the given doubly linked list and set *head_ref if required .

Constraints:
1<=T<=300
2<=N<=100
1<=x<=N

Example:

Input:
2
3                        //Size of Linked List
1  3 4                 //Elements of Linked List
3                        //Location of element to be deleted
4
1 5 2 9                    
1

Output:
1 3           
5 2 9
*/

void deleteNode(Node **head_ref, int x)
{
    int k=1;
    Node *y,*temp=*head_ref , *t=*head_ref;
    if(x==1){
        *head_ref = (*head_ref)->next;
        //(head_ref)->prev = NULL;
        //free(temp);
        return;
    }
    while(k<x && t->next!=NULL){
        k++;
        t=t->next;
    }
    y=t->prev;
    y->next=t->next;
    if(t->next){//if by any chance t->next ie the pointer is till existing
        t->next->prev=y;
        free(t);
        return;
    }
}
