/*

You are given an array A containing 2*N+2 positive numbers, out of which 2*N numbers exist in pairs whereas the other two number occur exactly
once and are distinct. You need to find the other two numbers and print them in ascending order.
 

Input :
The first line contains a value T, which denotes the number of test cases. Then T test cases follow .The first line of each test case contains
a value N. The next line contains 2*N+2 space separated integers.

Output :
Print in a new line the two numbers in ascending order.

Constraints :
1<=T<=100
1<=N<=10^6
1<=A[i]<=5*10^8

Example:
Input :
2
2
1 2 3 2 1 4
1
2 1 3 2

Output :
3 4
1 3

*/

#include <bits/stdc++.h>
using namespace std;

void find(int a[], int n)
{
    sort(a,a+n);
    vector<int> v(2);
    map<int,int> f;
    for(int i=0;i<n;i++) f[a[i]]++;
    int i=0;
     map<int,int> ::iterator ch;
    for(ch=f.begin(); ch!=f.end(); ch++)
    {
        if(ch->second %2 == 1)
        v[i++]=ch->first;
    }
    sort(v.begin(), v.end());
    for(i=0;i<v.size();i++) cout<<v[i]<<" ";
    
cout<<endl;
}



int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    n= 2*n +2;
	    int a[n];
	    for(int i=0;i<n;i++) cin>>a[i];
	    find(a,n);
	}
	return 0;
}
