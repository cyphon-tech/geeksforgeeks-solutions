/*
You are given a decimal number n. You need to find the gray code of the number n and convert it into decimal.

Input:
The first line contains an integer T, the number of test cases. For each test case, there is an integer n denoting the number

Output:
For each test case, the output is gray code equivalent of n.

Constraints:
1 <= T <= 100
0 <= n <= 108

Example:
Input
2
7
10
Output
4
15

Explanation:
Testcase1: 7 is represented as 111 in binary form. The gray code of 111 is 100, in the binary form whose decimal equivalent is 4.

Testcase2: 10 is represented as 1010 in binary form. The gray code of 1010 is 1111, in the binary form whose decimal equivalent is 15.
*/

#include <iostream>
using namespace std;

int main() {
	int t; cin>>t; while(t--){
	    long long int n; cin>>n;
	    long long int gray = n^(n>>1);
	    cout<<gray<<'\n';
	}
	return 0;
}
 
