/*
Given an array of size N. The task is to sort the array elements by completing functions heapify() and buildHeap() which are used to implement 
Heap Sort.

Input:
First line of the input denotes number of test cases T. First line of the test case is the size of array and second line consists of array
elements.

Output:
Sorted array in ascending order.

Constraints:
1 <= T <= 100
1 <= N <= 106
1 <= arr[i] <= 106

Example:
Input:
2
5
4 1 3 9 7
10
10 9 8 7 6 5 4 3 2 1

Output:
1 3 4 7 9
1 2 3 4 5 6 7 8 9 10

Explanation:
Testcase 1: After sorting elements using heap sort, elements will be in order as 1, 3, 4, 7 and 9.
*/

void heapify(int a[], int n, int i)  {
      int largest = i;
      int l= 2*i+1;
      int r= 2*i+2;
      if(l<n && a[l]>a[largest])
        largest=l;
      if(r<n && a[r]>a[largest])
        largest=r;
     if(largest!=i){
         swap(a[i] , a[largest]);
         heapify(a,n,largest);
     }
}
// Rearranges input array so that it becomes a max heap
void buildHeap(int a[], int n)  { 
    for(int i=n/2-1; i>=0; i--){
        heapify(a,n,i);
    }
   /* for(int i=n-1; i>=0; i--){
        swap(a[0], a[i]);
        heapify(a,i,0);
    }*/
}
