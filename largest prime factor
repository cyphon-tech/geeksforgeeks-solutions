/*

Given a number N, the task is to find the largest prime factor of that number.

Input:
The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow. Each test case contains an 
integer N.

Output:
For each test case, in a new line, print the largest prime factor of N.

Constraints:
1 <= T <= 100
2 <= N <= 1010

Example:
Input:
2
6
15
Output:
3
5
*/

#include <bits/stdc++.h>
#define ll long long int
using namespace std;

//largest prime factor of a number


void primeFactors(int n) 
{ 
    int max;
    while (n%2 == 0) 
    { 
        max=2; 
        n = n/2; 
    } 
    for (int i = 3; i <= sqrt(n); i = i+2) 
    {
        while (n%i == 0) 
        { 
            if(i>max) max=i; 
            n = n/i; 
        } 
    } 
    if (n > 2) 
       max=n;

cout<<max<<endl;
} 

int main() {
	int t; cin>>t; while(t--)
	{
	    int n; cin>>n; primeFactors(n);
	}
	return 0;
}
 
