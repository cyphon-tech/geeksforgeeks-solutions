/*
Given a string S, find length of the longest substring with all distinct characters.  For example, for input "abca", the output is 3 as
"abc" is the longest substring with all distinct characters.

Input:
The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is String str.

Output:
Print length of smallest substring with maximum number of distinct characters.
Note: The output substring should have all distinct characters.

Constraints:
1 ≤ T ≤ 100
1 ≤ size of str ≤ 10000

Example:
Input:
2
abababcdefababcdab
geeksforgeeks

Output:
6
7
*/

#include <bits/stdc++.h>
using namespace std;

int main() {
	int t; cin>>t; while(t--){
	    string s; cin>>s;
	    int i=0,j=0,len=0;
	    unordered_set<char> m;
	  //  for(auto k : s) m.insert(k);
	    while(i<s.size() && j<s.size()){
	        if(m.find(s[j]) == m.end()){
	            m.insert(s[j++]);
	            len = max(len, j-i);
	        }
	        else m.erase(s[i++]);
	    }
	    cout<<len<<'\n';
	}
	return 0;
}
