/*
Given a number N, check whether it is sparse or not. A number is said to be a sparse number if in the binary representation of the number no
two or more consecutive bits are set.

Input:
The first line of input contains an integer T denoting the number of test cases. The first line of each test case is number 'N'.

Output:
Print '1' if the number is sparse and '0' if the number is not sparse.

Constraints:
1 <= T <= 100
1 <= N <= 103

Example:
Input:
2
2
3

Output:
1
0

Explanation:
Testcase 1: Binary Representation of 2 is 10, which is not having consecutive set bits. So, it is sparse number.
Testcase 2: Binary Representation of 3 is 11, which is having consecutive set bits in it. So, it is not a sparse number.
*/

#include <bits/stdc++.h>
using namespace std;

int main() {
	int t; cin>>t; while(t--){
	    int n,f=0; cin>>n;
	    while(n/2>0){
	        if(((n&1)==1) && (((n>>1)&1)==1)){
	            f=1;
	            break;
	        }
	        n>>=1;
	    }
	    if(f==0) cout<<1<<endl;
	    else cout<<0<<endl;
	}
	return 0;
}
