/*
Given a string, the task is to remove duplicates from it. Expected time complexity O(n) where n is length of input string and extra space 
O(1) under the assumption that there are total 256 possible characters in a string.

Note: that original order of characters must be kept same. 

Input: 
First line of the input is the number of test cases T. And first line of test case contains a string.

Output:  
Modified string without duplicates and same order of characters.

Constraints: 
1 <= T <= 15
1 <= |string|<= 1000

Example:
Input:
2
geeksforgeeks
geeks for geeks

Output:
geksfor
geks for
*/

#include <bits/stdc++.h>
using namespace std;

int main() {
	int t; cin>>t; cin.ignore(); while(t--){
	    string s; getline(cin, s);
	    int freq[256] = {0};
	    for(int i=0; i<s.size(); i++){
	        if(freq[(int)s[i]] == 0){
	            cout<<s[i];
	            freq[(int)s[i]]++;
	        }
	    }
	    cout<<'\n';
	}
	return 0;
}
