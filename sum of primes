/*
Your task is to calculate sum  of primes present as digits of given number N.

Input:

The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. The next T lines contains an 
integer N.

Output:
Print sum of primes in the digit

Constraints:
1 ≤ T ≤ 50
2 ≤ N ≤ 50000


Example:

Input:

2
333
686

Output:
9
0
*/

#include <bits/stdc++.h>
using namespace std;

bool isPrime[10] = {false, false, true, true,false,true, false, true, false,
                    false};

int main() {
	int t; cin>>t; while(t--){
	   int n; cin>>n;
	    int sum=0;
	    while(n>0){
	        int num=n%10;
	        if(isPrime[num]==true){
	            sum+=num;
	            //break;
	        }
	        n/=10;
	    }
	    cout<<sum<<'\n';
	}
	return 0;
}
