/*
Given two arrays of integers, write a program to check if a pair of values (one value from each array) exists such that swapping the elements
of the pair will make the sum of two arrays equal.

Input:
First line of input contains a single integer T which denotes the number of test cases. T test cases follows. First line of each test case
contains two space separated integers N and M. Second line of each test case contains N space separated integers denoting the elements of first
array. Third line of each test case contains M space separated integers denoting the elements of second array.

Output:
For each test case, print 1 if there exists any such pair otherwise print -1.

Constraints:
1 <= T <= 100
1 <= N <= 104
1 <= M <= 104
0 <= elements <= 104

Example:
Input:
2
6 4
4 1 2 1 1 2
3 6 3 3
4 4
5 7 4 6
1 2 3 8

Output:
1
1

Explanation:
Testcase 1: 1 and 3 are two such values one from first array other from second one, if we swap these two values then we will get both arrays
sum as equal.
*/

#include <bits/stdc++.h>
using namespace std;

int main(){
    int t; cin>>t; while(t--){
        int n,m; cin>>n>>m;
        int a[n],b[m],sa=0,sb=0;
        for(int i=0; i<n; i++) { cin>>a[i]; sa+=a[i]; }
        for(int i=0; i<m; i++) { cin>>b[i]; sb+=b[i]; }
        int diff= abs(sa-sb) , c=0;
        set<int> ma;
        for(int i=0; i<n; i++) ma.insert(a[i]);
            for(int i=0; i<m; i++){
                if(ma.find(diff-b[i]) != ma.end()){
                    int temp=sa , temp2=sb;
                    temp=temp-(diff-b[i])+b[i];
                    temp2=temp2+(diff-b[i])-b[i];
                    if(temp==temp2) 
                    {
                        c=1;
                        break;
                    }
                
            }
           
        }
         if(c==1)cout<<1<<endl;
            else cout<<-1<<endl;
    }
}
